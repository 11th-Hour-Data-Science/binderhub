{{- if .Values.ingress.enabled -}}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: binderhub
  {{- if or (and .Values.ingress.https.enabled (eq .Values.ingress.https.type "kube-lego")) .Values.ingress.annotations }}
  annotations:
    {{- if and .Values.ingress.https.enabled (eq .Values.ingress.https.type "kube-lego") }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- with .Values.ingress.ingressClassName }}
  ingressClassName: "{{ . }}"
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
          - path: /{{ $.Values.ingress.pathSuffix }}
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: {{ $.Values.ingress.pathType }}
            backend:
              service:
                name: binder
                port:
                  number: 80
            {{- else }}
            backend:
              serviceName: binder
              servicePort: 80
            {{- end }}
    {{- end }}
  {{- if and .Values.ingress.https.enabled (eq .Values.ingress.https.type "kube-lego") }}
  tls:
    - secretName: kubelego-tls-binder-{{ .Release.Name }}
      hosts:
        {{- range .Values.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
  {{- else if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
{{- end }}
